/**
 * Api Documentada
 * Documentaci√≥n de la API de ejemplo con Flask + gRPC
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The VoluntarioDto model module.
 * @module model/VoluntarioDto
 * @version 1.0
 */
class VoluntarioDto {
    /**
     * Constructs a new <code>VoluntarioDto</code>.
     * @alias module:model/VoluntarioDto
     * @param apellido {String} 
     * @param email {String} 
     * @param idOrganizacion {Number} 
     * @param idVoluntario {String} 
     * @param nombre {String} 
     */
    constructor(apellido, email, idOrganizacion, idVoluntario, nombre) { 
        
        VoluntarioDto.initialize(this, apellido, email, idOrganizacion, idVoluntario, nombre);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, apellido, email, idOrganizacion, idVoluntario, nombre) { 
        obj['apellido'] = apellido;
        obj['email'] = email;
        obj['idOrganizacion'] = idOrganizacion;
        obj['idVoluntario'] = idVoluntario;
        obj['nombre'] = nombre;
    }

    /**
     * Constructs a <code>VoluntarioDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VoluntarioDto} obj Optional instance to populate.
     * @return {module:model/VoluntarioDto} The populated <code>VoluntarioDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VoluntarioDto();

            if (data.hasOwnProperty('apellido')) {
                obj['apellido'] = ApiClient.convertToType(data['apellido'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('idOrganizacion')) {
                obj['idOrganizacion'] = ApiClient.convertToType(data['idOrganizacion'], 'Number');
            }
            if (data.hasOwnProperty('idVoluntario')) {
                obj['idVoluntario'] = ApiClient.convertToType(data['idVoluntario'], 'String');
            }
            if (data.hasOwnProperty('nombre')) {
                obj['nombre'] = ApiClient.convertToType(data['nombre'], 'String');
            }
            if (data.hasOwnProperty('telefono')) {
                obj['telefono'] = ApiClient.convertToType(data['telefono'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VoluntarioDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VoluntarioDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of VoluntarioDto.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['apellido'] && !(typeof data['apellido'] === 'string' || data['apellido'] instanceof String)) {
            throw new Error("Expected the field `apellido` to be a primitive type in the JSON string but got " + data['apellido']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['idVoluntario'] && !(typeof data['idVoluntario'] === 'string' || data['idVoluntario'] instanceof String)) {
            throw new Error("Expected the field `idVoluntario` to be a primitive type in the JSON string but got " + data['idVoluntario']);
        }
        // ensure the json data is a string
        if (data['nombre'] && !(typeof data['nombre'] === 'string' || data['nombre'] instanceof String)) {
            throw new Error("Expected the field `nombre` to be a primitive type in the JSON string but got " + data['nombre']);
        }
        // ensure the json data is a string
        if (data['telefono'] && !(typeof data['telefono'] === 'string' || data['telefono'] instanceof String)) {
            throw new Error("Expected the field `telefono` to be a primitive type in the JSON string but got " + data['telefono']);
        }

        return true;
    }


}

VoluntarioDto.RequiredProperties = ["apellido", "email", "idOrganizacion", "idVoluntario", "nombre"];

/**
 * @member {String} apellido
 */
VoluntarioDto.prototype['apellido'] = undefined;

/**
 * @member {String} email
 */
VoluntarioDto.prototype['email'] = undefined;

/**
 * @member {Number} idOrganizacion
 */
VoluntarioDto.prototype['idOrganizacion'] = undefined;

/**
 * @member {String} idVoluntario
 */
VoluntarioDto.prototype['idVoluntario'] = undefined;

/**
 * @member {String} nombre
 */
VoluntarioDto.prototype['nombre'] = undefined;

/**
 * @member {String} telefono
 */
VoluntarioDto.prototype['telefono'] = undefined;






export default VoluntarioDto;

