/**
 * Api Documentada
 * Documentaci√≥n de la API de ejemplo con Flask + gRPC
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InformeSolicitud model module.
 * @module model/InformeSolicitud
 * @version 1.0
 */
class InformeSolicitud {
    /**
     * Constructs a new <code>InformeSolicitud</code>.
     * @alias module:model/InformeSolicitud
     * @param cantidad {Number} 
     * @param categoria {String} 
     * @param eliminado {String} 
     * @param recibida {Boolean} 
     */
    constructor(cantidad, categoria, eliminado, recibida) { 
        
        InformeSolicitud.initialize(this, cantidad, categoria, eliminado, recibida);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cantidad, categoria, eliminado, recibida) { 
        obj['cantidad'] = cantidad;
        obj['categoria'] = categoria;
        obj['eliminado'] = eliminado;
        obj['recibida'] = recibida;
    }

    /**
     * Constructs a <code>InformeSolicitud</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InformeSolicitud} obj Optional instance to populate.
     * @return {module:model/InformeSolicitud} The populated <code>InformeSolicitud</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InformeSolicitud();

            if (data.hasOwnProperty('cantidad')) {
                obj['cantidad'] = ApiClient.convertToType(data['cantidad'], 'Number');
            }
            if (data.hasOwnProperty('categoria')) {
                obj['categoria'] = ApiClient.convertToType(data['categoria'], 'String');
            }
            if (data.hasOwnProperty('eliminado')) {
                obj['eliminado'] = ApiClient.convertToType(data['eliminado'], 'String');
            }
            if (data.hasOwnProperty('recibida')) {
                obj['recibida'] = ApiClient.convertToType(data['recibida'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InformeSolicitud</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InformeSolicitud</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InformeSolicitud.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['categoria'] && !(typeof data['categoria'] === 'string' || data['categoria'] instanceof String)) {
            throw new Error("Expected the field `categoria` to be a primitive type in the JSON string but got " + data['categoria']);
        }
        // ensure the json data is a string
        if (data['eliminado'] && !(typeof data['eliminado'] === 'string' || data['eliminado'] instanceof String)) {
            throw new Error("Expected the field `eliminado` to be a primitive type in the JSON string but got " + data['eliminado']);
        }

        return true;
    }


}

InformeSolicitud.RequiredProperties = ["cantidad", "categoria", "eliminado", "recibida"];

/**
 * @member {Number} cantidad
 */
InformeSolicitud.prototype['cantidad'] = undefined;

/**
 * @member {String} categoria
 */
InformeSolicitud.prototype['categoria'] = undefined;

/**
 * @member {String} eliminado
 */
InformeSolicitud.prototype['eliminado'] = undefined;

/**
 * @member {Boolean} recibida
 */
InformeSolicitud.prototype['recibida'] = undefined;






export default InformeSolicitud;

