/**
 * Api Documentada
 * Documentaci√≥n de la API de ejemplo con Flask + gRPC
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Evento from './Evento';
import EventoUsuario from './EventoUsuario';
import VoluntarioEventoDto from './VoluntarioEventoDto';

/**
 * The EventoUsersDto model module.
 * @module model/EventoUsersDto
 * @version 1.0
 */
class EventoUsersDto {
    /**
     * Constructs a new <code>EventoUsersDto</code>.
     * @alias module:model/EventoUsersDto
     * @param evento {module:model/Evento} 
     */
    constructor(evento) { 
        
        EventoUsersDto.initialize(this, evento);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, evento) { 
        obj['evento'] = evento;
    }

    /**
     * Constructs a <code>EventoUsersDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventoUsersDto} obj Optional instance to populate.
     * @return {module:model/EventoUsersDto} The populated <code>EventoUsersDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventoUsersDto();

            if (data.hasOwnProperty('evento')) {
                obj['evento'] = Evento.constructFromObject(data['evento']);
            }
            if (data.hasOwnProperty('users')) {
                obj['users'] = ApiClient.convertToType(data['users'], [EventoUsuario]);
            }
            if (data.hasOwnProperty('voluntarios')) {
                obj['voluntarios'] = ApiClient.convertToType(data['voluntarios'], [VoluntarioEventoDto]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventoUsersDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventoUsersDto</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventoUsersDto.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `evento`
        if (data['evento']) { // data not null
          Evento.validateJSON(data['evento']);
        }
        if (data['users']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['users'])) {
                throw new Error("Expected the field `users` to be an array in the JSON data but got " + data['users']);
            }
            // validate the optional field `users` (array)
            for (const item of data['users']) {
                EventoUsuario.validateJSON(item);
            };
        }
        if (data['voluntarios']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['voluntarios'])) {
                throw new Error("Expected the field `voluntarios` to be an array in the JSON data but got " + data['voluntarios']);
            }
            // validate the optional field `voluntarios` (array)
            for (const item of data['voluntarios']) {
                VoluntarioEventoDto.validateJSON(item);
            };
        }

        return true;
    }


}

EventoUsersDto.RequiredProperties = ["evento"];

/**
 * @member {module:model/Evento} evento
 */
EventoUsersDto.prototype['evento'] = undefined;

/**
 * @member {Array.<module:model/EventoUsuario>} users
 */
EventoUsersDto.prototype['users'] = undefined;

/**
 * @member {Array.<module:model/VoluntarioEventoDto>} voluntarios
 */
EventoUsersDto.prototype['voluntarios'] = undefined;






export default EventoUsersDto;

