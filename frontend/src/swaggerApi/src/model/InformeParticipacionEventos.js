/**
 * Api Documentada
 * Documentaci√≥n de la API de ejemplo con Flask + gRPC
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventoDtoInforme from './EventoDtoInforme';

/**
 * The InformeParticipacionEventos model module.
 * @module model/InformeParticipacionEventos
 * @version 1.0
 */
class InformeParticipacionEventos {
    /**
     * Constructs a new <code>InformeParticipacionEventos</code>.
     * @alias module:model/InformeParticipacionEventos
     * @param mes {String} 
     */
    constructor(mes) { 
        
        InformeParticipacionEventos.initialize(this, mes);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, mes) { 
        obj['mes'] = mes;
    }

    /**
     * Constructs a <code>InformeParticipacionEventos</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InformeParticipacionEventos} obj Optional instance to populate.
     * @return {module:model/InformeParticipacionEventos} The populated <code>InformeParticipacionEventos</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InformeParticipacionEventos();

            if (data.hasOwnProperty('mes')) {
                obj['mes'] = ApiClient.convertToType(data['mes'], 'String');
            }
            if (data.hasOwnProperty('eventos')) {
                obj['eventos'] = ApiClient.convertToType(data['eventos'], [EventoDtoInforme]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InformeParticipacionEventos</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InformeParticipacionEventos</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InformeParticipacionEventos.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['mes'] && !(typeof data['mes'] === 'string' || data['mes'] instanceof String)) {
            throw new Error("Expected the field `mes` to be a primitive type in the JSON string but got " + data['mes']);
        }
        if (data['eventos']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['eventos'])) {
                throw new Error("Expected the field `eventos` to be an array in the JSON data but got " + data['eventos']);
            }
            // validate the optional field `eventos` (array)
            for (const item of data['eventos']) {
                EventoDtoInforme.validateJSON(item);
            };
        }

        return true;
    }


}

InformeParticipacionEventos.RequiredProperties = ["mes"];

/**
 * @member {String} mes
 */
InformeParticipacionEventos.prototype['mes'] = undefined;

/**
 * @member {Array.<module:model/EventoDtoInforme>} eventos
 */
InformeParticipacionEventos.prototype['eventos'] = undefined;






export default InformeParticipacionEventos;

