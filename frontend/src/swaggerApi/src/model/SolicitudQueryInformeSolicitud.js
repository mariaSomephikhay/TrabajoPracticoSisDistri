/**
 * Api Documentada
 * Documentaci√≥n de la API de ejemplo con Flask + gRPC
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SolicitudFiltronformeSolicitud from './SolicitudFiltronformeSolicitud';

/**
 * The SolicitudQueryInformeSolicitud model module.
 * @module model/SolicitudQueryInformeSolicitud
 * @version 1.0
 */
class SolicitudQueryInformeSolicitud {
    /**
     * Constructs a new <code>SolicitudQueryInformeSolicitud</code>.
     * @alias module:model/SolicitudQueryInformeSolicitud
     * @param query {String} 
     * @param variables {module:model/SolicitudFiltronformeSolicitud} 
     */
    constructor(query, variables) { 
        
        SolicitudQueryInformeSolicitud.initialize(this, query, variables);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, query, variables) { 
        obj['query'] = query || 'query InformeSolicitudes($filtro: FiltroSolicitudInput) { informeSolicitudes(filtro: $filtro) { status message data { categoria eliminado cantidad recibida } } }';
        obj['variables'] = variables;
    }

    /**
     * Constructs a <code>SolicitudQueryInformeSolicitud</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SolicitudQueryInformeSolicitud} obj Optional instance to populate.
     * @return {module:model/SolicitudQueryInformeSolicitud} The populated <code>SolicitudQueryInformeSolicitud</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SolicitudQueryInformeSolicitud();

            if (data.hasOwnProperty('query')) {
                obj['query'] = ApiClient.convertToType(data['query'], 'String');
            }
            if (data.hasOwnProperty('variables')) {
                obj['variables'] = SolicitudFiltronformeSolicitud.constructFromObject(data['variables']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SolicitudQueryInformeSolicitud</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SolicitudQueryInformeSolicitud</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SolicitudQueryInformeSolicitud.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['query'] && !(typeof data['query'] === 'string' || data['query'] instanceof String)) {
            throw new Error("Expected the field `query` to be a primitive type in the JSON string but got " + data['query']);
        }
        // validate the optional field `variables`
        if (data['variables']) { // data not null
          SolicitudFiltronformeSolicitud.validateJSON(data['variables']);
        }

        return true;
    }


}

SolicitudQueryInformeSolicitud.RequiredProperties = ["query", "variables"];

/**
 * @member {String} query
 * @default 'query InformeSolicitudes($filtro: FiltroSolicitudInput) { informeSolicitudes(filtro: $filtro) { status message data { categoria eliminado cantidad recibida } } }'
 */
SolicitudQueryInformeSolicitud.prototype['query'] = 'query InformeSolicitudes($filtro: FiltroSolicitudInput) { informeSolicitudes(filtro: $filtro) { status message data { categoria eliminado cantidad recibida } } }';

/**
 * @member {module:model/SolicitudFiltronformeSolicitud} variables
 */
SolicitudQueryInformeSolicitud.prototype['variables'] = undefined;






export default SolicitudQueryInformeSolicitud;

