/**
 * Api Documentada
 * Documentaci√≥n de la API de ejemplo con Flask + gRPC
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SolicitudDonacion from './SolicitudDonacion';
import SolicitudOrganizacionDto from './SolicitudOrganizacionDto';

/**
 * The SolicitudGet model module.
 * @module model/SolicitudGet
 * @version 1.0
 */
class SolicitudGet {
    /**
     * Constructs a new <code>SolicitudGet</code>.
     * @alias module:model/SolicitudGet
     * @param activa {Boolean} 
     * @param id {String} 
     * @param procesada {Boolean} 
     */
    constructor(activa, id, procesada) { 
        
        SolicitudGet.initialize(this, activa, id, procesada);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, activa, id, procesada) { 
        obj['activa'] = activa;
        obj['id'] = id;
        obj['procesada'] = procesada;
    }

    /**
     * Constructs a <code>SolicitudGet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SolicitudGet} obj Optional instance to populate.
     * @return {module:model/SolicitudGet} The populated <code>SolicitudGet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SolicitudGet();

            if (data.hasOwnProperty('activa')) {
                obj['activa'] = ApiClient.convertToType(data['activa'], 'Boolean');
            }
            if (data.hasOwnProperty('donaciones')) {
                obj['donaciones'] = ApiClient.convertToType(data['donaciones'], [SolicitudDonacion]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('organizacionSolicitante')) {
                obj['organizacionSolicitante'] = SolicitudOrganizacionDto.constructFromObject(data['organizacionSolicitante']);
            }
            if (data.hasOwnProperty('procesada')) {
                obj['procesada'] = ApiClient.convertToType(data['procesada'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SolicitudGet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SolicitudGet</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SolicitudGet.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['donaciones']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['donaciones'])) {
                throw new Error("Expected the field `donaciones` to be an array in the JSON data but got " + data['donaciones']);
            }
            // validate the optional field `donaciones` (array)
            for (const item of data['donaciones']) {
                SolicitudDonacion.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `organizacionSolicitante`
        if (data['organizacionSolicitante']) { // data not null
          SolicitudOrganizacionDto.validateJSON(data['organizacionSolicitante']);
        }

        return true;
    }


}

SolicitudGet.RequiredProperties = ["activa", "id", "procesada"];

/**
 * @member {Boolean} activa
 */
SolicitudGet.prototype['activa'] = undefined;

/**
 * @member {Array.<module:model/SolicitudDonacion>} donaciones
 */
SolicitudGet.prototype['donaciones'] = undefined;

/**
 * @member {String} id
 */
SolicitudGet.prototype['id'] = undefined;

/**
 * @member {module:model/SolicitudOrganizacionDto} organizacionSolicitante
 */
SolicitudGet.prototype['organizacionSolicitante'] = undefined;

/**
 * @member {Boolean} procesada
 */
SolicitudGet.prototype['procesada'] = undefined;






export default SolicitudGet;

