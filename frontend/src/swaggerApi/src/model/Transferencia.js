/**
 * Api Documentada
 * Documentaci√≥n de la API de ejemplo con Flask + gRPC
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DonacionTransferencia from './DonacionTransferencia';

/**
 * The Transferencia model module.
 * @module model/Transferencia
 * @version 1.0
 */
class Transferencia {
    /**
     * Constructs a new <code>Transferencia</code>.
     * @alias module:model/Transferencia
     * @param idSolicitud {Number} 
     * @param idOrganizacionDonante {Number} 
     */
    constructor(idSolicitud, idOrganizacionDonante) { 
        
        Transferencia.initialize(this, idSolicitud, idOrganizacionDonante);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, idSolicitud, idOrganizacionDonante) { 
        obj['id_solicitud'] = idSolicitud;
        obj['id_organizacion_donante'] = idOrganizacionDonante;
    }

    /**
     * Constructs a <code>Transferencia</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Transferencia} obj Optional instance to populate.
     * @return {module:model/Transferencia} The populated <code>Transferencia</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Transferencia();

            if (data.hasOwnProperty('id_solicitud')) {
                obj['id_solicitud'] = ApiClient.convertToType(data['id_solicitud'], 'Number');
            }
            if (data.hasOwnProperty('id_organizacion_donante')) {
                obj['id_organizacion_donante'] = ApiClient.convertToType(data['id_organizacion_donante'], 'Number');
            }
            if (data.hasOwnProperty('donaciones')) {
                obj['donaciones'] = ApiClient.convertToType(data['donaciones'], [DonacionTransferencia]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Transferencia</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Transferencia</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Transferencia.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['donaciones']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['donaciones'])) {
                throw new Error("Expected the field `donaciones` to be an array in the JSON data but got " + data['donaciones']);
            }
            // validate the optional field `donaciones` (array)
            for (const item of data['donaciones']) {
                DonacionTransferencia.validateJSON(item);
            };
        }

        return true;
    }


}

Transferencia.RequiredProperties = ["id_solicitud", "id_organizacion_donante"];

/**
 * @member {Number} id_solicitud
 */
Transferencia.prototype['id_solicitud'] = undefined;

/**
 * @member {Number} id_organizacion_donante
 */
Transferencia.prototype['id_organizacion_donante'] = undefined;

/**
 * @member {Array.<module:model/DonacionTransferencia>} donaciones
 */
Transferencia.prototype['donaciones'] = undefined;






export default Transferencia;

