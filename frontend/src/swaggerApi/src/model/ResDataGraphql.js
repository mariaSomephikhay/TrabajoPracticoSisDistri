/**
 * Api Documentada
 * Documentaci√≥n de la API de ejemplo con Flask + gRPC
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResDataGraphql model module.
 * @module model/ResDataGraphql
 * @version 1.0
 */
class ResDataGraphql {
    /**
     * Constructs a new <code>ResDataGraphql</code>.
     * @alias module:model/ResDataGraphql
     * @param filterType {String} 
     * @param id {Number} 
     * @param name {String} 
     * @param usuario {String} 
     * @param valueFilter {String} 
     */
    constructor(filterType, id, name, usuario, valueFilter) { 
        
        ResDataGraphql.initialize(this, filterType, id, name, usuario, valueFilter);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, filterType, id, name, usuario, valueFilter) { 
        obj['filterType'] = filterType;
        obj['id'] = id;
        obj['name'] = name;
        obj['usuario'] = usuario;
        obj['valueFilter'] = valueFilter;
    }

    /**
     * Constructs a <code>ResDataGraphql</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResDataGraphql} obj Optional instance to populate.
     * @return {module:model/ResDataGraphql} The populated <code>ResDataGraphql</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResDataGraphql();

            if (data.hasOwnProperty('filterType')) {
                obj['filterType'] = ApiClient.convertToType(data['filterType'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('usuario')) {
                obj['usuario'] = ApiClient.convertToType(data['usuario'], 'String');
            }
            if (data.hasOwnProperty('valueFilter')) {
                obj['valueFilter'] = ApiClient.convertToType(data['valueFilter'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResDataGraphql</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResDataGraphql</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResDataGraphql.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['filterType'] && !(typeof data['filterType'] === 'string' || data['filterType'] instanceof String)) {
            throw new Error("Expected the field `filterType` to be a primitive type in the JSON string but got " + data['filterType']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['usuario'] && !(typeof data['usuario'] === 'string' || data['usuario'] instanceof String)) {
            throw new Error("Expected the field `usuario` to be a primitive type in the JSON string but got " + data['usuario']);
        }
        // ensure the json data is a string
        if (data['valueFilter'] && !(typeof data['valueFilter'] === 'string' || data['valueFilter'] instanceof String)) {
            throw new Error("Expected the field `valueFilter` to be a primitive type in the JSON string but got " + data['valueFilter']);
        }

        return true;
    }


}

ResDataGraphql.RequiredProperties = ["filterType", "id", "name", "usuario", "valueFilter"];

/**
 * @member {String} filterType
 */
ResDataGraphql.prototype['filterType'] = undefined;

/**
 * @member {Number} id
 */
ResDataGraphql.prototype['id'] = undefined;

/**
 * @member {String} name
 */
ResDataGraphql.prototype['name'] = undefined;

/**
 * @member {String} usuario
 */
ResDataGraphql.prototype['usuario'] = undefined;

/**
 * @member {String} valueFilter
 */
ResDataGraphql.prototype['valueFilter'] = undefined;






export default ResDataGraphql;

